=== 0.8.5
  Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/26
    events with date parameters failing
=== 0.8.4 - 18 September 2009
  Refactored load structure, should now be conforming to    
        http://weblog.rubyonrails.org/2009/9/1/gem-packaging-best-practices
    I did finesse the load path issue a bit as a workaround to RSpec not putting lib on $LOADPATH
    the lib directory will get added to load path IF IT ISN"T ALREADY THERE
    
  Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/25
     please clean your code up to be quiet
     
   Thanks to Ryan for such a courteous problem report.
=== 0.8.3 - 18 September 2009
   Released with bad gemspec
=== 0.8.2 - 4 September 2009
  Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/23
        initialization_methodsrb-syntax
  Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/24
        need-to-handle-empty-property-values
=== 0.8.1 - 18 August 2009
  Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/21
        exception-when-count-option-used-to-enumerate-non-recurring-event
=== 0.8.0 - 11 August 2009

  Minor Version Bump - There is a small potentially breaking change see section on treatment of X-properties below

  * Unknown Components

  Starting with version 0.8.0 RiCal will parse calendars and components which contain nonstandard components.

  For example, there was a short-lived proposal to extend RFC2445 with a new VVENUE component which would hold structured information about the location of an event.  This proposal was never accepted and was withdrawn, but there is icalendar data in the wild which contains VVENUE components.

  Prior to version 0.8.0, RiCal would raise an exception if unknown component types were encountered.  Starting with version 0.8.0 RiCal will 'parse' such components and create instances of NonStandard component to represent them.  Since the actual format of unknown components is not known by RiCal, the NonStandard component will simply save the data lines between the BEGIN:xxx and END:xxx lines, (where xxx is the non-standard component name, e.g. VVENUE).  If the calendar is re-exported the original lines will be replayed.

  * Change to treatment of X-properties

  RFC2445 allows 'non-standard' or experimental properties which property-names beginning with X.  RiCal always supported parsing these.

  The standard properties are specified as to how many times they can occur within a particular component.  For singly occurring properties RiCal returns a single property object, while for properties which can occur multiple times RiCal returns an array of property objects.

  While implementing NonStandard properties, I realized that X-properties were being assumed to be singly occurring. But this isn't necessarily true.  So starting with 0.8.0 the X-properties are represented by an array of property objects.

  THIS MAY BREAK SOME APPLICATIONS, but the adaptation should be easy.

=== 0.7.7 - 6 August 2009
   - No changes other than a version number bump.  github seems to have failed to notice the commit of v0.7.6
     and didn't build the gem.  Hopefully it will notice this one.
=== 0.7.6 - 6 August 2009
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/20
     RiCal::PropertyValue::Period was returning a nil ruby value.
=== 0.7.5 - 3 August 2009
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/19
      Microsoft ical exports double quote tzid values in parameters, which caused a failure to find VTIMEZONES
      This exposed an issue with parameter parsing.  Did the simplest thing which could work which was to
      strip the quotes.  Need to BOLO for other pathological cases showing up in future, which may require
      smarter parameter parsing.

=== 0.7.4 - 21 July 2009
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/17
    Problem with Alarm trigger property value
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/18
    Problem with exporting components with sub-components
=== 0.7.3 - 13 July 2009
  Added pointers to rdoc in README
=== 0.7.2 - 6 July 2009
  updated to use newest versions of newgem and hoe, in order to make run-code-run work again
=== 0.7.1 - 6 July 2009
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/15
      duration validation issues
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/16
      event finish_time loses timezone info when event has a dtstart and duration
=== 0.7.0 - 29 June 2009
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/14
      component without recurrence properties should enumerate just itself only if it is within the period between starting and before
   - added the :overlapping option to OccurrenceEnumerator#occurrences - Allows the enumeration of occurrences which are either partiall or completely within a timespan given by a pair of Dates/Times/DateTimes
   - Fixes some Ruby 1.9 incompatibilities
   - Added some new rake tasks to run specs under multi-ruby
=== 0.6.3 - 14 June 2009
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941-ri_cal/tickets/13
      tzinfotimezones-with-no-transitions-fail-on-export
=== 0.6.2 - 11 June 2009
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941-ri_cal/tickets/12
      export-failure-for-unbounded-tzinfo-timezone
=== 0.6.1 - 6 June 2009
   - Fixes problem with file which loads activesupport for the rake spec:with_activesupport task, it now
   requires >=2.2 instead of <=2.2 - Thanks to Paul Scott-Murphy for finding this.
=== 0.6.0 - 5 June 2009
 Time for a minor version bump.
   - Improved overall enumeration performance bypassing most of the effects of the poor performance of Ruby's DateTime class.
   - Added a framework for performance monitoring during development.
   - New performance directory with subdirs for code to be monitored for performance (subjects)
   - New script files: 
        script/benchmark_subject runs a ruby benchmark on one performance subject
        script/profile_subject runs ruby-prof for a subject and puts a kcachegrind compatible calltree in the performance_data directory.
   - New rake tasks: 
        performance:benchmark runs benchmarks against all subjects in the performance directory and produces a consolidated output file in performance_data/benchmarks.out
        performance:profile runs script/profile_subject against all subjects in the performance directory.
=== 0.5.3 - 1 June, 2009
   - Improved performance of time zone enumeration, TimeZonePeriod now caches occurrences
   - Added a profiling directory which contains ruby programs which benchmark and/or profile performance
=== 0.5.2
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/11
   Export folding is not UTF-8 Safe
=== 0.5.1
   - Fixes README to acknowledge release on RubyForge
=== 0.5.0 rubyforge release candidate Tue May 26 10:26:43 2009 -0400
   - Added OccurrenceEnumerator#zulu_occurrence_range
=== 0.0.11 Sat May 23 18:24:57 2009 -0400
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/5
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/9
=== 0.0.10
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/8
=== 0.0.9
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/4
    Missing comparison methods in PropertyValue::Date
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/6
    Type of dtstart and dtend (DATE or DATETIME) now preserved on enumeration
=== 0.0.8
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941-ri_cal/tickets/1
    EXDATE and RDATE now pick up the timezone from DateTime, Time, and TimeWithZone values
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/2
    Missing arithmetic methods in PropertyValue::Date
   - Fixes http://rick_denatale.lighthouseapp.com/projects/30941/tickets/3
       Components with no recurrence rules or rdate properties failed on enumeration, they now
       will enumerate a single occurrence  
=== 0.0.7
   - Fixes a bug relating to properly recognizing ActiveRecord::TimeWithZone
   - DATETIME propertyvalues will now return an instance of TimeWithZone instead of DateTime when
   activesupport is present, and it is appropriate. See the README for details
=== 0.0.6
   - Added rake tasks to run specs with either the tzinfo gem or activesupport (<=2.2)
   - Default rake task now runs both of these
=== 0.0.5
   - Fixes a bug in occurrence enumeration reported by paulsm on github
=== 0.0.4
   - Fixes a bug in imported timezones reported by paulsm on github
=== 0.0.3
   - Added tzid method to Ruby Time and DateTime instances, and to ActiveRecord::TimeWithZone if it is defined this method is used to determine the desired
timezone when an instance of one of these classes is given as the value of a datetime property.  If the tzid is nil then the default tzid is used,
if it is set to :floating then the property will be a floating time.
   - Removed the ability to pass an array with a tzid string and a date-time since the above made it unnecessary
   - The ruby datetime property returned from the ruby_value method on the DateTime property will return an instance of ::DateTime with:
     -- The proper utc offset
     -- The tzid set to the right tzid
   - Made exdate/rdate building possible
   - Added a default_tzid attribute to the Calendar component, if this attribute is not set for a particular calendar it will delegate to the default set 
for the DateTime property class.
   - Added fix patches from
     -- http://github.com/kjwierenga/ri_cal
     -- http://github.com/wesmaldonado/ri_cal

=== 0.0.2
   - Fixes gemspec
== 0.0.1
   - Initial public release
